{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","keyCode","handleKeyboardClick","event","setState","key","document","addEventListener","this","removeEventListener","className","length","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,IAFb,EAaEC,oBAAsB,SAACC,GACrB,EAAKC,SAAS,CAAEH,QAASE,EAAME,OAdnC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,uBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,uBAV/C,oBAiBE,WACE,IAAQD,EAAYO,KAAKR,MAAjBC,QAER,OACE,mBAAGS,UAAU,eAAb,SACGT,EAAQU,OAAR,mCAC+BV,EAD/B,KAEG,gCAxBZ,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.d0084b39.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  keyCode: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    keyCode: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyboardClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyboardClick);\n  }\n\n  handleKeyboardClick = (event: KeyboardEvent) => {\n    this.setState({ keyCode: event.key });\n  };\n\n  render() {\n    const { keyCode } = this.state;\n\n    return (\n      <p className=\"App__message\">\n        {keyCode.length\n          ? `The last pressed key is [${keyCode}]`\n          : 'Nothing was pressed yet'}\n      </p>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}